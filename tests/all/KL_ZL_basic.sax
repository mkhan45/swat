/* Basics */

type bin = +{'b0 : bin, 'b1 : bin, 'e : 1}

proc zero (d : bin) =
  cut u : 1
    write u ()
  write d 'e(u)

proc one (d : bin) =
  cut x : bin
    call zero x
  write d 'b1(x)

proc succ (d : bin) (x : bin) =
  read x {
  | 'b0(x0) => write d 'b1(x0)
  | 'b1(x1) => cut y : bin
                  call succ y x1
               write d 'b0(y)
  | 'e(u) => read u ()
             call one d
  }

proc add (d : bin) (x : bin) (y : bin) =
  read x {
  | 'b0(x0) => read y {
               | 'b0(y0) => cut d1 : bin
                               call add d1 x0 y0
                            write d 'b0(d1)
               | 'b1(y0) => cut d1 : bin
                               call add d1 x0 y0
                            write d 'b1(d1)
               | 'e(u) => read u ()
                          write d 'b0(x0)
               }
  | 'b1(x0) => read y {
               | 'b0(y0) => cut d1 : bin
                               call add d1 x0 y0
                            write d 'b1(d1)
               | 'b1(y0) => cut d1 : bin
                               call add d1 x0 y0
                            cut d2 : bin
                               call succ d2 d1
                            write d 'b0(d2)
               | 'e(u) => read u ()
                          write d 'b1(x0)
               }
  | 'e(u) => read u ()
             id d y
  }


/* Run the test */
proc test_add_ones (d: bin) = cut x: bin
                                 call one x
                              cut y: bin
                                 call one y
                         call add d x y

/* Run the test */
proc test_add_ones_one (d: bin) = cut x: bin
                                     call test_add_ones x
                                  cut y: bin
                                     call one y
                         call add d x y
