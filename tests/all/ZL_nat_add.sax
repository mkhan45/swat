type nat = +{ 'zero: 1, 'suc: nat }
type bool = +{ 'false: 1, 'true: 1 }

proc add (out : nat) (a : nat) (b : nat) =
    read a {
        | 'zero(unit) =>
            read unit ()
            id out b
        | 'suc(a_prev) =>
            cut tmp : nat
                call add tmp a_prev b
            write out 'suc(tmp)
    }

proc const_zero (out : nat) =
    cut unit : 1
        write unit ()
    write out 'zero(unit)

proc const_one (out : nat) =
    cut zero : nat
        call const_zero zero
    write out 'suc(zero)

proc const_two (out : nat) =
    cut one_1 : nat
        call const_one one_1
    cut one_2 : nat
        call const_one one_2
    call add out one_1 one_2
