type bin = +{'b0 : bin, 'b1 : bin, 'e : 1}
type list = +{'nil : 1, 'cons : bin * list}

proc reverse (d : list) (l : list) (acc : list) =
    read l {
    | 'nil(u) => 
        read u ()
            id d acc
    | 'cons(ls) => 
        read ls (hd, tl)
            cut new : list
                cut new_p : bin * list
                    write new_p (hd, acc)
                write new 'cons(new_p)
            call reverse d tl new
    }

proc empty (d : list) =
    cut u : 1
        write u ()
    write d 'nil(u)

proc prepend (d : list) (ls : list) (n : nat) =
    cut p : nat * list
        write p (ls, n)
    write d 'cons(p)
