type nat = +{ 'zero : 1, 'succ : nat }

proc pred (d : nat) (x : nat) =
    cut z : nat
        id z x
    read z {
    | 'zero(u) => cut w : 1
                    id w u
                  write d 'zero(w)
    | 'succ(y) => id d y
    }

proc zero (d : nat) =
  cut u : 1
    write u ()
    write d 'zero(u)

proc succ (d : nat) (n : nat) =
  write d 'succ(n)

proc one (d : nat) =
  cut z : nat
    call zero z
    call succ d z

proc main (d : nat) =
    cut o : nat
        call one o
    call pred d o
